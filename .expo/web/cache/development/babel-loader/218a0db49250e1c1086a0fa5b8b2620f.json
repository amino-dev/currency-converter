{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"text\", \"onButtonPress\"];\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport colors from \"../constants/colors\";\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white,\n    marginVertical: 10,\n    marginHorizontal: 20,\n    flexDirection: 'row',\n    borderRadius: 5\n  },\n  containerDisabled: {\n    backgroundColor: colors.offWhite\n  },\n  button: {\n    padding: 15,\n    borderRightColor: colors.border,\n    borderRightWidth: 1,\n    backgroundColor: colors.white,\n    borderTopLeftRadius: 5,\n    borderBottomLeftRadius: 5\n  },\n  buttonText: {\n    fontSize: 18,\n    color: colors.blue,\n    fontWeight: 'bold'\n  },\n  input: {\n    flex: 1,\n    padding: 10,\n    fontSize: 16,\n    color: colors.textLight\n  }\n});\nexport var ConversionInput = function ConversionInput(_ref) {\n  var text = _ref.text,\n      onButtonPress = _ref.onButtonPress,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var containerStyles = [styles.container];\n\n  if (props.editable === false) {\n    containerStyles.push(styles.containerDisabled);\n  }\n\n  return React.createElement(View, {\n    style: containerStyles\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onButtonPress\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, text)), React.createElement(TextInput, _extends({\n    style: styles.input\n  }, props)));\n};","map":{"version":3,"sources":["/home/aminoo/Bureau/currency-converter/App/components/ConversionInput.js"],"names":["React","colors","styles","StyleSheet","create","container","backgroundColor","white","marginVertical","marginHorizontal","flexDirection","borderRadius","containerDisabled","offWhite","button","padding","borderRightColor","border","borderRightWidth","borderTopLeftRadius","borderBottomLeftRadius","buttonText","fontSize","color","blue","fontWeight","input","flex","textLight","ConversionInput","text","onButtonPress","props","containerStyles","editable","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AASA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAEL,MAAM,CAACM,KADf;AAETC,IAAAA,cAAc,EAAE,EAFP;AAGTC,IAAAA,gBAAgB,EAAE,EAHT;AAITC,IAAAA,aAAa,EAAE,KAJN;AAKTC,IAAAA,YAAY,EAAE;AALL,GADoB;AAQ/BC,EAAAA,iBAAiB,EAAE;AACjBN,IAAAA,eAAe,EAAEL,MAAM,CAACY;AADP,GARY;AAW/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,gBAAgB,EAAEf,MAAM,CAACgB,MAFnB;AAGNC,IAAAA,gBAAgB,EAAE,CAHZ;AAINZ,IAAAA,eAAe,EAAEL,MAAM,CAACM,KAJlB;AAKNY,IAAAA,mBAAmB,EAAE,CALf;AAMNC,IAAAA,sBAAsB,EAAE;AANlB,GAXuB;AAmB/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,KAAK,EAAEtB,MAAM,CAACuB,IAFJ;AAGVC,IAAAA,UAAU,EAAE;AAHF,GAnBmB;AAwB/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,CADD;AAELZ,IAAAA,OAAO,EAAE,EAFJ;AAGLO,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,KAAK,EAAEtB,MAAM,CAAC2B;AAJT;AAxBwB,CAAlB,CAAf;AAgCA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAuC;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,aAA8B,QAA9BA,aAA8B;AAAA,MAAZC,KAAY;;AACpE,MAAMC,eAAe,GAAG,CAAC/B,MAAM,CAACG,SAAR,CAAxB;;AAEA,MAAI2B,KAAK,CAACE,QAAN,KAAmB,KAAvB,EAA8B;AAC5BD,IAAAA,eAAe,CAACE,IAAhB,CAAqBjC,MAAM,CAACU,iBAA5B;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEqB;AAAb,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE/B,MAAM,CAACY,MAAhC;AAAwC,IAAA,OAAO,EAAEiB;AAAjD,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7B,MAAM,CAACmB;AAApB,KAAiCS,IAAjC,CADF,CADF,EAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE5B,MAAM,CAACwB;AAAzB,KAAoCM,KAApC,EAJF,CADF;AAQD,CAdM","sourcesContent":["import React from 'react';\nimport {\n  View,\n  TouchableOpacity,\n  Text,\n  TextInput,\n  StyleSheet,\n} from 'react-native';\n\nimport colors from '../constants/colors';\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white,\n    marginVertical: 10,\n    marginHorizontal: 20,\n    flexDirection: 'row',\n    borderRadius: 5,\n  },\n  containerDisabled: {\n    backgroundColor: colors.offWhite,\n  },\n  button: {\n    padding: 15,\n    borderRightColor: colors.border,\n    borderRightWidth: 1,\n    backgroundColor: colors.white,\n    borderTopLeftRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  buttonText: {\n    fontSize: 18,\n    color: colors.blue,\n    fontWeight: 'bold',\n  },\n  input: {\n    flex: 1,\n    padding: 10,\n    fontSize: 16,\n    color: colors.textLight,\n  },\n});\n\nexport const ConversionInput = ({ text, onButtonPress, ...props }) => {\n  const containerStyles = [styles.container];\n\n  if (props.editable === false) {\n    containerStyles.push(styles.containerDisabled);\n  }\n  return (\n    <View style={containerStyles}>\n      <TouchableOpacity style={styles.button} onPress={onButtonPress}>\n        <Text style={styles.buttonText}>{text}</Text>\n      </TouchableOpacity>\n      <TextInput style={styles.input} {...props} />\n    </View>\n  );\n};"]},"metadata":{},"sourceType":"module"}