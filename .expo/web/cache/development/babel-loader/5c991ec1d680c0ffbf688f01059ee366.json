{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState } from \"react\";\nimport { api } from \"./util/api\";\nexport var ConversionContext = createContext();\nexport var ConversionContextProvider = function ConversionContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(\"USD\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      baseCurrency = _useState2[0],\n      _setBaseCurrency = _useState2[1];\n\n  var _useState3 = useState(\"GBP\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quoteCurrency = _useState4[0],\n      setQuoteCurrency = _useState4[1];\n\n  var setBaseCurrency = function setBaseCurrency(currency) {\n    return api(\"/latest?base=\" + currency).then(function (response) {\n      console.log(response);\n\n      _setBaseCurrency(currency);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var swapCurrencies = function swapCurrencies() {\n    setBaseCurrency(quoteCurrency);\n    setQuoteCurrency(baseCurrency);\n  };\n\n  var contextValue = {\n    baseCurrency: baseCurrency,\n    setBaseCurrency: setBaseCurrency,\n    quoteCurrency: quoteCurrency,\n    setQuoteCurrency: setQuoteCurrency,\n    swapCurrencies: swapCurrencies\n  };\n  return React.createElement(ConversionContext.Provider, {\n    value: contextValue\n  }, children);\n};","map":{"version":3,"sources":["/home/aminoo/Bureau/currency-converter/App/util/ConversionContext.js"],"names":["React","createContext","useState","api","ConversionContext","ConversionContextProvider","children","baseCurrency","_setBaseCurrency","quoteCurrency","setQuoteCurrency","setBaseCurrency","currency","then","response","console","log","catch","error","swapCurrencies","contextValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,GAAT;AAEA,OAAO,IAAMC,iBAAiB,GAAGH,aAAa,EAAvC;AAGP,OAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACzD,kBAAyCJ,QAAQ,CAAC,KAAD,CAAjD;AAAA;AAAA,MAAOK,YAAP;AAAA,MAAqBC,gBAArB;;AACA,mBAA0CN,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOO,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAc;AACpC,WAAOT,GAAG,mBAAiBS,QAAjB,CAAH,CACJC,IADI,CACC,UAACC,QAAD,EAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACAN,MAAAA,gBAAgB,CAACI,QAAD,CAAhB;AACD,KAJI,EAKJK,KALI,CAKE,UAACC,KAAD,EAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAPI,CAAP;AAQD,GATD;;AAUA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BR,IAAAA,eAAe,CAACF,aAAD,CAAf;AACAC,IAAAA,gBAAgB,CAACH,YAAD,CAAhB;AACD,GAHD;;AAIA,MAAMa,YAAY,GAAG;AACnBb,IAAAA,YAAY,EAAZA,YADmB;AAEnBI,IAAAA,eAAe,EAAfA,eAFmB;AAGnBF,IAAAA,aAAa,EAAbA,aAHmB;AAInBC,IAAAA,gBAAgB,EAAhBA,gBAJmB;AAKnBS,IAAAA,cAAc,EAAdA;AALmB,GAArB;AAOA,SACE,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEC;AAAnC,KACGd,QADH,CADF;AAKD,CA7BM","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { api } from \"./util/api\";\n\nexport const ConversionContext = createContext();\n\n// ConversionContext.Provider\nexport const ConversionContextProvider = ({ children }) => {\n  const [baseCurrency, _setBaseCurrency] = useState(\"USD\");\n  const [quoteCurrency, setQuoteCurrency] = useState(\"GBP\");\n  const setBaseCurrency = (currency) => {\n    return api(`/latest?base=${currency}`)\n      .then((response) => {\n        console.log(response);\n        _setBaseCurrency(currency);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const swapCurrencies = () => {\n    setBaseCurrency(quoteCurrency);\n    setQuoteCurrency(baseCurrency);\n  };\n  const contextValue = {\n    baseCurrency,\n    setBaseCurrency,\n    quoteCurrency,\n    setQuoteCurrency,\n    swapCurrencies,\n  };\n  return (\n    <ConversionContext.Provider value={contextValue}>\n      {children}\n    </ConversionContext.Provider>\n  );\n};\n// ConversionContext.Consumer\n"]},"metadata":{},"sourceType":"module"}