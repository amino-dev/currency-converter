{"ast":null,"code":"import React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport Home from \"../screens/Home\";\nimport Options from \"../screens/Options\";\nimport CurrencyList from \"../screens/CurrencyList\";\nimport colors from \"../constants/colors\";\nimport { ConversionContextProvider } from \"../util/ConversionContext\";\nvar MainStack = createStackNavigator();\n\nvar MainStackScreen = function MainStackScreen() {\n  return React.createElement(MainStack.Navigator, null, React.createElement(MainStack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"Options\",\n    component: Options\n  }));\n};\n\nvar ModalStack = createStackNavigator();\n\nvar ModalStackScreen = function ModalStackScreen() {\n  return React.createElement(ModalStack.Navigator, {\n    mode: \"modal\"\n  }, React.createElement(ModalStack.Screen, {\n    name: \"Main\",\n    component: MainStackScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(ModalStack.Screen, {\n    name: \"CurrencyList\",\n    component: CurrencyList,\n    options: function options(_ref) {\n      var navigation = _ref.navigation,\n          route = _ref.route;\n      return {\n        title: route.params && route.params.title,\n        headerLeft: null,\n        headerRight: function headerRight() {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.pop();\n            },\n            style: {\n              paddingHorizontal: 10\n            }\n          }, React.createElement(Entypo, {\n            name: \"cross\",\n            size: 30,\n            color: colors.blue\n          }));\n        }\n      };\n    }\n  }));\n};\n\nexport default (function () {\n  return React.createElement(NavigationContainer, null, React.createElement(ConversionContextProvider, null, React.createElement(ModalStackScreen, null)));\n});","map":{"version":3,"sources":["/home/aminoo/Bureau/currency-converter/App/config/Navigation.js"],"names":["React","NavigationContainer","createStackNavigator","Entypo","Home","Options","CurrencyList","colors","ConversionContextProvider","MainStack","MainStackScreen","headerShown","ModalStack","ModalStackScreen","navigation","route","title","params","headerLeft","headerRight","pop","paddingHorizontal","blue"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,SAASC,yBAAT;AAEA,IAAMC,SAAS,GAAGP,oBAAoB,EAAtC;;AACA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SACtB,oBAAC,SAAD,CAAW,SAAX,QACE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEN,IAFb;AAGE,IAAA,OAAO,EAAE;AAAEO,MAAAA,WAAW,EAAE;AAAf;AAHX,IADF,EAME,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,SAAvB;AAAiC,IAAA,SAAS,EAAEN;AAA5C,IANF,CADsB;AAAA,CAAxB;;AAWA,IAAMO,UAAU,GAAGV,oBAAoB,EAAvC;;AACA,IAAMW,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SACvB,oBAAC,UAAD,CAAY,SAAZ;AAAsB,IAAA,IAAI,EAAC;AAA3B,KACE,oBAAC,UAAD,CAAY,MAAZ;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEH,eAFb;AAGE,IAAA,OAAO,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf;AAHX,IADF,EAME,oBAAC,UAAD,CAAY,MAAZ;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,SAAS,EAAEL,YAFb;AAGE,IAAA,OAAO,EAAE;AAAA,UAAGQ,UAAH,QAAGA,UAAH;AAAA,UAAeC,KAAf,QAAeA,KAAf;AAAA,aAA4B;AACnCC,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,IAAgBF,KAAK,CAACE,MAAN,CAAaD,KADD;AAEnCE,QAAAA,UAAU,EAAE,IAFuB;AAGnCC,QAAAA,WAAW,EAAE;AAAA,iBACX,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE;AAAA,qBAAML,UAAU,CAACM,GAAX,EAAN;AAAA,aADX;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,iBAAiB,EAAE;AAArB;AAFT,aAIE,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,IAAI,EAAE,EAA3B;AAA+B,YAAA,KAAK,EAAEd,MAAM,CAACe;AAA7C,YAJF,CADW;AAAA;AAHsB,OAA5B;AAAA;AAHX,IANF,CADuB;AAAA,CAAzB;;AA0BA,gBAAe;AAAA,SACb,oBAAC,mBAAD,QACE,oBAAC,yBAAD,QACE,oBAAC,gBAAD,OADF,CADF,CADa;AAAA,CAAf","sourcesContent":["import React from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nimport Home from \"../screens/Home\";\nimport Options from \"../screens/Options\";\nimport CurrencyList from \"../screens/CurrencyList\";\nimport colors from \"../constants/colors\";\nimport { ConversionContextProvider } from \"../util/ConversionContext\";\n\nconst MainStack = createStackNavigator();\nconst MainStackScreen = () => (\n  <MainStack.Navigator>\n    <MainStack.Screen\n      name=\"Home\"\n      component={Home}\n      options={{ headerShown: false }}\n    />\n    <MainStack.Screen name=\"Options\" component={Options} />\n  </MainStack.Navigator>\n);\n\nconst ModalStack = createStackNavigator();\nconst ModalStackScreen = () => (\n  <ModalStack.Navigator mode=\"modal\">\n    <ModalStack.Screen\n      name=\"Main\"\n      component={MainStackScreen}\n      options={{ headerShown: false }}\n    />\n    <ModalStack.Screen\n      name=\"CurrencyList\"\n      component={CurrencyList}\n      options={({ navigation, route }) => ({\n        title: route.params && route.params.title,\n        headerLeft: null,\n        headerRight: () => (\n          <TouchableOpacity\n            onPress={() => navigation.pop()}\n            style={{ paddingHorizontal: 10 }}\n          >\n            <Entypo name=\"cross\" size={30} color={colors.blue} />\n          </TouchableOpacity>\n        ),\n      })}\n    />\n  </ModalStack.Navigator>\n);\n\nexport default () => (\n  <NavigationContainer>\n    <ConversionContextProvider>\n      <ModalStackScreen />\n    </ConversionContextProvider>\n  </NavigationContainer>\n);\n"]},"metadata":{},"sourceType":"module"}